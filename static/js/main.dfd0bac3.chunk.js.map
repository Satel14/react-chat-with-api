{"version":3,"sources":["api/api.js","alert/alert.mp3","redux/reducers/dialogReducer.js","img/profile-avatar.png","components/Avatar.jsx","components/ChatItem.jsx","utility/utility.js","components/Google/Login.jsx","components/Google/Logout.jsx","components/Google.jsx","components/Chats.jsx","redux/reducers/selectors.js","components/ChatsContainer.jsx","components/MessageItem.jsx","components/Messages.jsx","components/MessagesContainer.jsx","App.js","redux/reducers/usersReducer.js","redux/reducers/authReducer.js","redux/store.js","index.js"],"names":["getAll","axios","initialState","dialogs","dialogId","members","userId","userName","messages","messageId","messageText","createdAt","chatFilter","addMessage","type","dialogReducer","state","action","newMessage","nextId","Date","cloneState","JSON","parse","stringify","map","d","filterText","Avatar","avatar","className","src","propfileAvatar","alt","ChatItem","currentMember","lastMessage","memberName","online","filterDate","data","toLowerCase","indexOf","getCurrentMemember","authId","users","memberId","filter","m","u","Login","props","clientId","useEffect","gapi","load","auth2","init","responseGoogle","response","buttonText","onSuccess","onFailure","cookiePolicy","Logout","onLogoutSuccess","App","useState","stateAuth","setStateAuth","res","profileObj","imageUrl","name","Chats","auth","setChatFilter","dialogsItems","length","date","moment","format","to","islogin","placeholder","value","onChange","e","currentTarget","onChatFilterChange","getUsers","getDialogs","getAuthUser","sortDialogsByDate","createSelector","sort","a","b","connect","obj","filtedDialogs","i","c","j","userNames","MessageItem","user","Messages","currentDialog","getMessage","messagesItems","messageKey","message","React","createRef","onSendMessage","current","ref","onKeyDown","keyCode","onPressEnter","onClick","compose","dispatch","sound","Audio","alert","setTimeout","then","resp","play","withRouter","match","params","path","render","from","usersReducer","authReducer","picture","url","persistConfig","key","storage","reducers","combineReducers","dialogsReducer","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunkMiddleWare","persist","persistStore","ReactDOM","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.dfd0bac3.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nexport const getAll = {\n    getMessage() {\n        return axios.get('https://api.chucknorris.io/jokes/random');\n    }\n}","export default __webpack_public_path__ + \"static/media/alert.d2fd69a8.mp3\";","import { getAll } from \"../../api/api\";\nimport nextId from \"react-id-generator\";\nimport alert from '../../alert/alert.mp3'\n\nconst initialState = {\n    dialogs: [\n        {\n            dialogId: \"dialog1\",\n            members: [\n                {\n                    userId: 1,\n                    userName: 'Alice Freeman'\n                },\n                {\n                    userId: 6,\n                    userName: 'Me'\n                }\n            ],\n            messages: [\n                {\n                    messageId: 1,\n                    messageText: 'Hi, please can u help me?',\n                    userId: 1,\n                    createdAt: 'Sat Sep 18 2021 08:10:48'\n                },\n            ]\n        },\n        {\n            dialogId: \"dialog2\",\n            members: [\n                {\n                    userId: 2,\n                    userName: 'Josefina'\n                },\n                {\n                    userId: 6,\n                    userName: 'Me'\n                }\n            ],\n            messages: [\n                {\n                    messageId: 1,\n                    messageText: 'Quickly come to the meeting room 1B, we have big server issue',\n                    userId: 2,\n                    createdAt: 'Sat Sep 18 2021 08:06:48'\n                },\n                {\n                    messageId: 2,\n                    messageText: 'I\\'m having breakfast right now, can\\'t you wait for 10 minutes?',\n                    userId: 6,\n                    createdAt: 'Sat Sep 10 2021 08:07:48'\n                },\n                {\n                    messageId: 3,\n                    messageText: 'We are losing money! Quick!',\n                    userId: 2,\n                    createdAt: 'Sat Sep 10 2021 08:09:48'\n                },\n            ]\n        },\n        {\n            dialogId: \"dialog3\",\n            members: [\n                {\n                    userId: 3,\n                    userName: 'Velazquez'\n                },\n                {\n                    userId: 6,\n                    userName: 'Me'\n                }\n            ],\n            messages: [\n                {\n                    messageId: 1,\n                    messageText: 'Hi how are you?',\n                    userId: 3,\n                    createdAt: 'Sat Sep 17 2021 19:07:48'\n                },\n                {\n                    messageId: 2,\n                    messageText: 'Hi everything is good.',\n                    userId: 6,\n                    createdAt: 'Sat Sep 17 2021 19:10:48'\n                },\n                {\n                    messageId: 3,\n                    messageText: 'Good to see you',\n                    userId: 3,\n                    createdAt: 'Sat Sep 18 2021 19:15:48'\n                },\n            ]\n        },\n        {\n            dialogId: \"dialog4\",\n            members: [\n                { userId: 4, userName: 'Barrera' },\n                { userId: 6, userName: 'Me' }\n            ],\n            messages: [\n                {\n                    messageId: 1,\n                    messageText: 'Hi, Barrera',\n                    userId: 6,\n                    createdAt: 'Sat Sep 09 2021 12:00:48'\n                },\n                {\n                    messageId: 2,\n                    messageText: 'Hi, how are you',\n                    userId: 4,\n                    createdAt: 'Sat Sep 09 2021 12:01:48'\n                },\n                {\n                    messageId: 3,\n                    messageText: 'Not bad, thanks.',\n                    userId: 6,\n                    createdAt: 'Sat Sep 09 2021 12:02:48'\n                },\n\n            ]\n        },\n        {\n            dialogId: \"dialog5\",\n            members: [\n                {\n                    userId: 5,\n                    userName: 'Mellisa Davenport'\n                },\n                {\n                    userId: 6,\n                    userName: 'Me'\n                }\n            ],\n            messages: [\n                {\n                    messageId: 1,\n                    messageText: 'Hello, how are you?',\n                    userId: 5,\n                    createdAt: '2022-08-02 12:09:48'\n                },\n                {\n                    messageId: 2,\n                    messageText: 'Im fine',\n                    userId: 6,\n                    createdAt: '2022-08-02 17:39:48'\n                },\n                {\n                    messageId: 3,\n                    messageText: 'Ok,bye',\n                    userId: 5,\n                    createdAt: '2022-08-02 17:40:48'\n                },\n\n            ]\n        },\n\n    ],\n    chatFilter: '',\n};\n\nconst dialogReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_NEW_MESSAGE':\n            const newMessage = {\n                messageId: nextId(),\n                messageText: action.messageText,\n                userId: action.userId,\n                createdAt: new Date()\n            };\n\n            const cloneState = JSON.parse(JSON.stringify(state));\n\n            cloneState.dialogs.map(d => d.dialogId === action.dialogId\n                ? d.messages = [...d.messages, newMessage]\n                : d)\n            return cloneState;\n        case 'SET_CHAT_FILTER':\n            return {\n                ...state,\n                chatFilter: action.filterText\n            }\n        default:\n            return state\n    }\n};\n\nexport const addMessage = (dialogId, messageText, userId) => ({ type: 'ADD_NEW_MESSAGE', dialogId, messageText, userId });\nexport const setChatFilter = (filterText) => ({ type: 'SET_CHAT_FILTER', filterText });\n\nexport const getMessage = (dialogId, userId) => (dispatch) => {\n    const sound = new Audio(alert)\n    setTimeout(() => {\n        getAll.getMessage()\n            .then(resp => {\n                dispatch(addMessage(dialogId, resp.data.value, userId))\n            })\n            sound.play()\n    }, 10000)\n}\n\nexport default dialogReducer;","export default __webpack_public_path__ + \"static/media/profile-avatar.2fda6558.png\";","import React from \"react\";\nimport '../styles/Avatar.scss';\nimport propfileAvatar from '../img/profile-avatar.png'\n\nconst Avatar = ({ avatar }) => {\n    return (\n        <div className=\"avatar\">\n            <div className=\"avatar__img\">\n                <img src={avatar ? avatar : propfileAvatar} alt=\"avatar\" />\n            </div>\n        </div>\n    )\n}\nexport default Avatar;","import React from \"react\";\nimport Avatar from \"./Avatar\";\nimport '../styles/ChatItem.scss';\n\nconst ChatItem = ({ currentMember, lastMessage, memberName, createdAt }) => {\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__wrapper\">\n                <Avatar avatar={currentMember.avatar} online={currentMember.online} />\n                <div className=\"chat__context\">\n                    <span className=\"chat__name\">{memberName}</span>\n                    <span className=\"chat__lastMessage\">{lastMessage}</span>\n                </div>\n            </div>\n            <span className=\"chat__date\">{createdAt}</span>\n        </div>\n    )\n}\n\nexport default ChatItem;","const filterDate = (data, filterText) => data?.toLowerCase().indexOf(filterText.toLowerCase()) > -1;\n\nexport const filterChatsBySearch = (obj, filterText) => {\n    return obj.filter(i => {\n        if (filterText.length !== 0) {\n            let c = i.messages.filter(j => filterDate(j.messageText,filterText));\n            let userNames = i.members.filter(m => filterDate(m.userName, filterText));\n\n            return (c.length + userNames.length)  > 0  ? true : false;\n        } else {\n            return obj\n        }\n\n    });\n}\n\nexport const getCurrentMemember = (members, authId, users) => {\n    let memberId = members.filter(m => m.userId !== authId)[0];\n    let currentMember = users.filter(u => u.userId === memberId.userId)[0];\n\n    return currentMember;\n}","import React, { useEffect } from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { gapi } from 'gapi-script'\r\nimport '../../styles/Google.scss'\r\nconst Login = (props) => {\r\n    const clientId = \"840204595437-uef0n28i5kt903fc8vkllg6tb0p1ig2o.apps.googleusercontent.com\";\r\n    useEffect(() => {\r\n        gapi.load(\"client:auth2\", () => {\r\n            gapi.auth2.init({ clientId: clientId })\r\n        })\r\n    }, [])\r\n\r\n    const responseGoogle = (response) => {\r\n        props.response(response)\r\n    }\r\n    return (\r\n        <div className='google_login'>  \r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport '../../styles/Google.scss'\r\nconst Logout = (props) => {\r\n    const logout = () => {\r\n        props.response()\r\n    }\r\n    const clientId = \"840204595437-uef0n28i5kt903fc8vkllg6tb0p1ig2o.apps.googleusercontent.com\";\r\n    return (\r\n        <div className='google_logout'>\r\n            <GoogleLogout\r\n                clientId={clientId}\r\n                buttonText=\"Logout\"\r\n                onLogoutSuccess={logout}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout","import React, { useState } from 'react'\r\nimport Login from '../components/Google/Login'\r\nimport Logout from '../components/Google/Logout'\r\nimport '../styles/Google.scss'\r\nconst App = () => {\r\n    const [stateAuth, setStateAuth] = useState()\r\n    const response = (res) => {\r\n        setStateAuth(res)\r\n    }\r\n    return (\r\n        <div className='google_content'>\r\n            {!stateAuth\r\n                ?\r\n                <Login response={response} />\r\n                :\r\n                <div className='google__header'>\r\n                    <img src={stateAuth.profileObj.imageUrl} alt='' />\r\n                    <h5>{stateAuth.profileObj.name}</h5>\r\n                    <Logout response={response} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport ChatItem from \"./ChatItem\";\nimport moment from 'moment';\nimport { getCurrentMemember } from \"../utility/utility\";\nimport Avatar from \"./Avatar\";\nimport '../styles/Chats.scss';\nimport Google from \"./Google\";\n\nconst Chats = ({ users, auth, setChatFilter, chatFilter, dialogs }) => {\n\n    const dialogsItems = dialogs.map(d => {\n\n        const lastMessage = d.messages[d.messages.length - 1];\n        const date = moment(lastMessage.createdAt).format('ll');\n\n        const currentMember = getCurrentMemember(d.members, auth.userId, users);\n        const memberName = (lastMessage.userId === auth.userId) ? 'Me' : currentMember.userName;\n\n        return <NavLink to={`/${d.dialogId}`} className=\"chat__item\" key={`${d.dialogId}`}>\n            <ChatItem lastMessage={d.messages[d.messages.length - 1].messageText}\n                createdAt={date} currentMember={currentMember} memberName={memberName} />\n        </NavLink>\n    })\n    const onChatFilterChange = (e) => {\n        setChatFilter(e.currentTarget.value)\n    }\n    return (\n        <div className=\"chats\">\n            <div className=\"chats__header\">\n                <div className=\"chats__search\">\n                        <div className=\"chats__user\">\n                            <Avatar avatar={auth.avatar} online={auth.islogin} />\n                            {auth.islogin ? <span>{auth.userName}</span> : null}\n                           <Google/>\n                        </div>\n\n                        <div className=\"chat__form\">\n                            <input type=\"text\"\n                                placeholder=\"Search or start new chat\"\n                                value={chatFilter}\n                                onChange={(e) => onChatFilterChange(e)} />\n                        </div>\n                </div>\n            </div>\n            <h2>Chats</h2>\n            <div className=\"chats__wrapper\">\n                {dialogsItems}\n            </div>\n        </div>\n    )\n}\n\nexport default Chats;","import { createSelector } from \"reselect\";\n\nexport const getUsers = state => state.users.users;\nexport const getDialogs = state => state.dialogs.dialogs;\nexport const getAuthUser = state => state.auth.userId;\n\nexport const sortDialogsByDate = createSelector(getDialogs,\n    (dialogs) => {\n        return dialogs.sort((a, b) => {\n            return new Date(b.messages[b.messages.length - 1].createdAt) - new Date(a.messages[a.messages.length - 1].createdAt)\n        });\n    }\n)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setChatFilter } from \"../redux/reducers/dialogReducer\"\nimport Chats from \"./Chats\";\nimport '../styles/Chats.scss';\nimport { getUsers, sortDialogsByDate} from \"../redux/reducers/selectors\";\nimport { filterChatsBySearch } from \"../utility/utility\";\n\nconst ChatsContainer = ({users, auth,setChatFilter, chatFilter, dialogs}) => {\n    \n    const filtedDialogs = filterChatsBySearch(dialogs,chatFilter);\n\n    return (\n        <Chats dialogs={filtedDialogs} users={users}  auth={auth} setChatFilter={setChatFilter} \n         chatFilter={chatFilter}/>\n    ) \n}\n\nconst mapState = (state) => ({\n    dialogs: sortDialogsByDate(state),\n    users: getUsers(state),\n    auth: state.auth,\n    chatFilter: state.dialogs.chatFilter\n});\n\nexport default connect(mapState, {setChatFilter})(ChatsContainer);","import React from \"react\";\nimport Avatar from \"./Avatar\";\nimport '../styles/MessageItem.scss';\n\nconst MessageItem = ({ messageText, createdAt, auth, userId, users }) => {\n\n    const user = users.filter(user => user.userId === userId)[0];\n    return (\n        <div className={`message ${userId === auth ? 'message-mine' : ''}`} >\n             <Avatar avatar={user.avatar} />\n            <div className=\"message__item\">\n                <div className={`message__text ${userId === auth ? 'message__text-mine' : ''}`}>\n                    <span>{messageText}</span>\n                </div>\n                <span className={`message__date ${userId === auth ? 'message__date-mine' : ''}`}>{createdAt}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default MessageItem;","import React from \"react\";\nimport MessageItem from \"./MessageItem\";\nimport '../styles/Messages.scss';\nimport moment from 'moment';\nimport { getCurrentMemember } from \"../utility/utility\";\nimport Avatar from \"./Avatar\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Messages = ({ messages, addMessage, currentDialog, auth, users, getMessage }) => {\n    const messagesItems = messages[0].messages.map(m => {\n        const messageKey = `${currentDialog}_${m.messageId}`;\n        const date = moment(m.createdAt).format('M/D/gg, h:mm a');\n        return <MessageItem key={messageKey} messageText={m.messageText} createdAt={date} auth={auth} userId={m.userId} users={users} />\n    });\n\n    const memberId = messages[0].members.filter(m => m.userId !== auth)[0];\n    const currentMember = getCurrentMemember(messages[0].members, auth, users);\n    const message = React.createRef();\n\n    const onSendMessage = () => {\n        addMessage(currentDialog, message.current.value, 6);\n        message.current.value = '';\n        getMessage(currentDialog, memberId.userId)\n    }\n    const onPressEnter = (e) => {\n        if (e.keyCode === 13) {\n            onSendMessage()\n        }\n    }\n    return (\n        <div className=\"messages\">\n            <div className=\"messages__header\">\n                <NavLink to='/' className=\"messages__back \"><button className=\"array_back\">←</button></NavLink>\n                <Avatar avatar={currentMember.avatar} online={currentMember.online} />\n                <span>{currentMember.userName}</span>\n            </div>\n            <div className=\"messages__content\"  >\n                {messagesItems}\n            </div>\n            <div className=\"add-message\">\n                <input ref={message} type=\"text\" placeholder=\"Type your message\" onKeyDown={(e) => onPressEnter(e)} />\n                <button onClick={onSendMessage} >\n                    Send\n                </button>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Messages;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Messages from \"./Messages\";\nimport { addMessage, getMessage } from \"../redux/reducers/dialogReducer\"\nimport { withRouter } from 'react-router-dom';\nimport { compose } from \"redux\";\nimport { getAuthUser, getDialogs, getUsers } from \"../redux/reducers/selectors\";\n\nconst MessagesContainer = ({ match, dialogs, addMessage, auth, users, getMessage }) => {\n\n    const currentDialog = match.params.dialogId;\n    const messages = dialogs.filter(d => d.dialogId === currentDialog);\n\n    return (\n        <Messages messages={messages} addMessage={addMessage}\n        currentDialog={currentDialog} auth={auth}\n        users={users} getMessage={getMessage} />\n    )\n\n};\n\nconst mapState = (state) => ({\n    dialogs: getDialogs(state),\n    auth: getAuthUser(state),\n    users: getUsers(state)\n});\nexport default compose(connect(mapState, { addMessage, getMessage }), withRouter)(MessagesContainer)","import { BrowserRouter } from 'react-router-dom';\nimport { Route, Redirect } from \"react-router\";\nimport ChatsContainer from \"./components/ChatsContainer\";\nimport MessagesContainer from \"./components/MessagesContainer\";\nimport './styles/Dialogs.scss';\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"dialogs\">\n                <Route path=\"/\" render={() => <ChatsContainer />} />\n                <Route path=\"/:dialogId\" render={() => <MessagesContainer />} />\n                <Redirect from=\"*\" to=\"/\" />\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const initialState = {\n    users: [\n        {\n            userId:1,\n            userName: \"Alice Freeman\",\n            avatar: \"https://i.pravatar.cc/150?img=58\",\n            online: true\n        },\n        {\n            userId:2,\n            userName: \"Josefina\",\n            avatar: \"https://i.pravatar.cc/150?img=11\",\n            online: true\n        },\n        {\n            userId:3,\n            userName: \"Velazquez\",\n            avatar: \"https://i.pravatar.cc/150?img=28\",\n            online: true\n        },\n        {\n            userId:4,\n            userName: \"Barrera\",\n            avatar: \"https://i.pravatar.cc/150?img=51\",\n            online: true\n        },\n        {\n            userId:5,\n            userName: \"Mellisa Davenport\",\n            avatar: \"https://i.pravatar.cc/150?img=48\",\n            online: true\n        },\n        {\n            userId:6,\n            userName: \"Me\",\n            avatar: null,\n            online: true\n        },\n        \n        \n    ]\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state\n    }\n};\n\nexport default usersReducer;","\nconst initialState = {\n    userId: 6,\n    avatar: null,\n    userName: null,\n    islogin: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOGIN_USER':\n            return {\n                ...state,\n                avatar: action.data.picture.data.url,\n                userName: action.data.name,\n                islogin: true,\n            };\n        case 'LOGOUT_USER':\n            return {\n                ...state,\n                avatar: null,\n                userName: null,\n                islogin: false,\n            }\n        default:\n            return state\n    }\n};\n\nexport const login = (data) => ({ type: 'LOGIN_USER', data });\nexport const logout = () => ({ type: 'LOGOUT_USER' });\nexport default authReducer;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport dialogsReducer from \"../redux/reducers/dialogReducer\";\nimport thunkMiddleWare from 'redux-thunk';\nimport usersReducer from \"./reducers/usersReducer\";\nimport authReducer from \"./reducers/authReducer\";\nimport storage from 'redux-persist/lib/storage' \nimport { persistStore, persistReducer } from 'redux-persist'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n  }\n\nconst reducers = combineReducers({\n    dialogs: dialogsReducer,\n    users: usersReducer,\n    auth: authReducer\n});\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store  = createStore(persistedReducer, applyMiddleware(thunkMiddleWare));\nexport const persist = persistStore(store)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store, persist} from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persist}>\n            <App />\n        </PersistGate >\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}